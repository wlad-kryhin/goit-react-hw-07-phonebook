{"version":3,"sources":["components/PhoneList/PhoneList.module.css","components/Filter/Filter.module.css","redux/action.jsx","redux/operation.jsx","redux/selectors.jsx","components/PhoneList/PhoneList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","redux/reducer.jsx","redux/store.jsx","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","changeFilter","createAction","fetchItemsRequest","fetchItemsSuccess","fetchItemsError","addItemsRequest","addItemsSuccess","addItemsError","deleteItemsRequest","deleteItemsSuccess","deleteItemsError","axios","defaults","baseURL","getFilterValue","state","contacts","filter","getItems","items","getList","normalizeFilter","toLocaleLowerCase","item","name","includes","getVisibleContacts","PhoneList","dispatch","useDispatch","list","useSelector","onDelete","id","action","delete","then","catch","error","deleteContact","useEffect","get","data","className","s","map","tel","text","number","button","type","onClick","ContactForm","useState","setName","setTel","onSubmit","event","preventDefault","post","addContacts","form","label","input","value","placeholder","onChange","currentTarget","pattern","required","Filter","e","target","App","length","createReducer","actions","_","payload","find","contact","toLowerCase","alert","isLoading","combineReducers","reducer","contactsReducer","store","configureStore","middleware","getDefaultMiddleware","concat","logger","devTools","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff5b7f60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PhoneList_list__22f7M\",\"button\":\"PhoneList_button__2De5e\",\"text\":\"PhoneList_text__1Emym\",\"number\":\"PhoneList_number__XlwQR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1xAk3\",\"label\":\"Filter_label__iT-6s\"};","// import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n// const addItem = createAction(\"items/add\", ({ name, tel }) => ({\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     tel,\r\n//   },\r\n// }));\r\n// const deleteItem = createAction(\"items/delete\");\r\nconst changeFilter = createAction(\"items/filter\");\r\nconst fetchItemsRequest = createAction(\"items/fetchItemsRequest\");\r\nconst fetchItemsSuccess = createAction(\"items/fetchItemsSuccess\");\r\nconst fetchItemsError = createAction(\"items/fetchItemsError\");\r\n\r\nconst addItemsRequest = createAction(\"items/addItemsRequest\");\r\nconst addItemsSuccess = createAction(\"items/addItemsSuccess\");\r\nconst addItemsError = createAction(\"items/addItemsError\");\r\n\r\nconst deleteItemsRequest = createAction(\"items/deleteItemsRequest\");\r\nconst deleteItemsSuccess = createAction(\"items/deleteItemsSuccess\");\r\nconst deleteItemsError = createAction(\"items/deleteItemsError\");\r\n// const addItem = ({ name, tel }) => ({\r\n//   type: actionTypes.ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     tel,\r\n//   },\r\n// });\r\n\r\n// const deleteItem = (id) => ({\r\n//   type: actionTypes.DELETE,\r\n//   payload: id,\r\n// });\r\n\r\n// const changeFilter = (value) => ({\r\n//   type: actionTypes.FILTER,\r\n//   payload: value,\r\n// });\r\nexport {\r\n  changeFilter,\r\n  addItemsError,\r\n  addItemsSuccess,\r\n  addItemsRequest,\r\n  deleteItemsError,\r\n  deleteItemsSuccess,\r\n  deleteItemsRequest,\r\n  fetchItemsError,\r\n  fetchItemsRequest,\r\n  fetchItemsSuccess,\r\n};\r\n","import * as action from \"./action\";\r\nimport axios from \"axios\";\r\n// import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\n\r\n// const fetchItems = createAsyncThunk(\r\n//   \"contacts\",\r\n//   async (_, { rejectWithValue }) => {\r\n//     try {\r\n//       const { data } = axios.get(\"/contacts\");\r\n//       return data;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   },\r\n// );\r\n\r\n// const addContacts = createAsyncThunk(\r\n//   \"contacts/addContacts\",\r\n//   async ({ name, tel }, { rejectWithValue }) => {\r\n//     try {\r\n//       const item = {\r\n//         name,\r\n//         tel,\r\n//       };\r\n//       const { data } = axios.post(\"/contacts\", item);\r\n//       return data;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   },\r\n// );\r\n\r\n// const deleteContact = createAsyncThunk(\r\n//   \"contacts/deleteContact\",\r\n//   async (id, { rejectWithValue }) => {\r\n//     try {\r\n//       const deleteItem = axios.delete(`/contacts/${id}`);\r\n//       return deleteItem;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   },\r\n// );\r\n\r\nconst addContacts =\r\n  ({ name, tel }) =>\r\n  (dispatch) => {\r\n    const item = {\r\n      name,\r\n      tel,\r\n    };\r\n    dispatch(action.addItemsRequest());\r\n\r\n    axios\r\n      .post(\"/contacts\", item)\r\n      .then(({ data }) => dispatch(action.addItemsSuccess(data)))\r\n      .catch((error) => dispatch(action.addItemsError(error)));\r\n  };\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(action.deleteItemsRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(action.deleteItemsSuccess(id)))\r\n    .catch((error) => dispatch(action.deleteItemsError(error)));\r\n};\r\n\r\nconst fetchItems = () => (dispatch) => {\r\n  dispatch(action.fetchItemsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(action.fetchItemsSuccess(data)))\r\n    .catch((error) => dispatch(action.fetchItemsError(error)));\r\n};\r\nexport { addContacts, deleteContact, fetchItems };\r\n","import { createSelector } from \"reselect\";\r\nconst getVisibleContacts = (items, filter) => {\r\n  const normalizeFilter = filter.toLocaleLowerCase();\r\n\r\n  return items.filter((item) =>\r\n    item.name.toLocaleLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\nexport const getFilterValue = (state) => state.contacts.filter;\r\nexport const getItems = (state) => state.contacts.items;\r\n// export const getVisibleContacts = createSelector(\r\n//   [getItems, getFilterValue],\r\n//   (items, filter) => {\r\n//     const normalizeFilter = filter.toLocaleLowerCase();\r\n\r\n//     return items.filter((item) =>\r\n//       item.name.toLocaleLowerCase().includes(normalizeFilter),\r\n//     );\r\n//   },\r\n// );\r\nexport const getList = (state) =>\r\n  getVisibleContacts(state.contacts.items, state.contacts.filter);\r\n","// import PropTypes from \"prop-types\";\r\nimport s from \"./PhoneList.module.css\";\r\n// import * as action from \"../../redux/action\";\r\nimport { deleteContact, fetchItems } from \"../../redux/operation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getList } from \"../../redux/selectors\";\r\nimport { useEffect } from \"react\";\r\nexport default function PhoneList() {\r\n  const dispatch = useDispatch();\r\n  const list = useSelector(getList);\r\n  const onDelete = (id) => dispatch(deleteContact(id));\r\n  useEffect(() => {\r\n    dispatch(fetchItems());\r\n  }, []);\r\n  return (\r\n    <ul className={s.list}>\r\n      {list.map(({ id, name, tel }) => {\r\n        return (\r\n          <li key={id}>\r\n            <p className={s.text}>{name}</p>\r\n            <p className={s.number}>{tel}</p>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n// PhoneList.propTypes = {\r\n//   list: PropTypes.array,\r\n//   onDelete: PropTypes.func,\r\n// };\r\n\r\n// const mapStateToProps = (state) => {\r\n//   const { filter, items } = state.contacts;\r\n//   // const { tel, name } = list;\r\n//   // if (\r\n//   //   items.find((contact) => contact.name.toLowerCase() === name.toLowerCase())\r\n//   // ) {\r\n//   //   alert(`${name} is already in contacts.`);\r\n//   // }\r\n//   // if (items.find((contact) => contact.tel === tel)) {\r\n//   //   alert(`${tel} is already in contacts.`);\r\n//   // }\r\n//   const visibleItems = getVisibleContacts(items, filter);\r\n\r\n//   return {\r\n//     list: visibleItems,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onDelete: (id) => dispatch(action.deleteItem(id)),\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProps)(PhoneList);\r\n","import { useState } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n// import * as action from \"../../redux/action\";\r\nimport { addContacts } from \"../../redux/operation\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [tel, setTel] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputNameChange = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const handleInputTelChange = (event) => {\r\n    setTel(event.currentTarget.value);\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch(addContacts({ name, tel }));\r\n    // event.target.reset();\r\n    setName(\"\");\r\n    setTel(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          value={name}\r\n          placeholder=\"Name Surname\"\r\n          onChange={handleInputNameChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Tel\r\n        <input\r\n          type=\"tel\"\r\n          name=\"tel\"\r\n          className={s.input}\r\n          placeholder=\"774-333-22\"\r\n          onChange={handleInputTelChange}\r\n          value={tel}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//   onSubmit: PropTypes.func,\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   submit: ({ name, tel }) => dispatch(action.addItem({ name, tel })),\r\n// });\r\n// export default connect(null, mapDispatchToProps)(ContactForm);\r\n","// import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\nimport * as action from \"../../redux/action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilterValue } from \"../../redux/selectors\";\r\nexport default function Filter() {\r\n  const value = useSelector(getFilterValue);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => dispatch(action.changeFilter(e.target.value))}\r\n        placeholder=\"Find contact...\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\n// Filter.propTypes = {\r\n//   value: PropTypes.string,\r\n//   onChange: PropTypes.func,\r\n// };\r\n// const mapStateToProps = (state) => ({\r\n//   value: state.contacts.filter,\r\n// });\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   change: (e) => dispatch(action.changeFilter(e.target.value)),\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import \"./index.css\";\nimport { useSelector } from \"react-redux\";\nimport PhoneList from \"./components/PhoneList/PhoneList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport { getItems } from \"./redux/selectors\";\n\nfunction App() {\n  const items = useSelector(getItems);\n  return (\n    <div className=\"container\">\n      <h1>PhoneBooks</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {items.length > 1 && <Filter />}\n\n      <PhoneList />\n    </div>\n  );\n}\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./action\";\r\nconst items = createReducer([], {\r\n  [actions.fetchItemsSuccess]: (_, { payload }) => payload,\r\n  [actions.addItemsSuccess]: (state, { payload }) => {\r\n    if (\r\n      state.find(\r\n        (contact) => contact.name.toLowerCase() === payload.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert(`${payload.name} is already in contacts.`);\r\n    } else if (state.find((contact) => contact.tel === payload.tel)) {\r\n      alert(`${payload.tel} is already in contacts.`);\r\n    } else {\r\n      return [...state, payload];\r\n    }\r\n  },\r\n  [actions.deleteItemsSuccess]: (state, { payload }) =>\r\n    state.filter((item) => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n// const entities = createReducer([], {\r\n//   [actions.fetchItemsSuccess]: (_, action) => action.payload,\r\n// });\r\nconst isLoading = createReducer(false, {\r\n  [actions.addItemsRequest]: () => true,\r\n  [actions.addItemsSuccess]: () => false,\r\n  [actions.addItemsError]: () => false,\r\n  [actions.deleteItemsRequest]: () => true,\r\n  [actions.deleteItemsSuccess]: () => false,\r\n  [actions.deleteItemsError]: () => false,\r\n});\r\n// export default combineReducers({\r\n//   entities,\r\n//   isLoading\r\n// })\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionTypes.ADD:\r\n//       if (\r\n//         state.find(\r\n//           (contact) =>\r\n//             contact.name.toLowerCase() === payload.name.toLowerCase(),\r\n//         )\r\n//       ) {\r\n//         alert(`${payload.name} is already in contacts.`);\r\n//       }\r\n//       if (state.find((contact) => contact.tel === payload.tel)) {\r\n//         alert(`${payload.tel} is already in contacts.`);\r\n//       }\r\n//       return [...state, payload];\r\n\r\n//     case actionTypes.DELETE:\r\n//       return state.filter((item) => item.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionTypes.FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n});\r\n","import contactsReducer from \"./reducer\";\r\n// import { persistStore, persistReducer } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n// const persistConfig = {\r\n//   key: \"items\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n// const persistedReducer = persistReducer(persistConfig, contactsReducer);\r\nconst reducer = {\r\n  contacts: contactsReducer,\r\n};\r\n// const store = createStore(reducer, composeWithDevTools());\r\nconst store = configureStore({\r\n  reducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\nexport { store };\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport * as store from \"./redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__5y0OE\",\"label\":\"ContactForm_label__dkZrq\",\"input\":\"ContactForm_input__1Md9x\",\"button\":\"ContactForm_button__3KcnM\"};"],"sourceRoot":""}